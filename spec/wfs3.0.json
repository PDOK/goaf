{
  "components": {
    "parameters": {
      "bbox": {
        "description": "Only features that have a geometry that intersects the bounding box are selected.\nThe bounding box is provided as four or six numbers, depending on whether the\ncoordinate reference system includes a vertical axis (elevation or depth):\n\n* Lower left corner, coordinate axis 1\n* Lower left corner, coordinate axis 2\n* Lower left corner, coordinate axis 3 (optional)\n* Upper right corner, coordinate axis 1\n* Upper right corner, coordinate axis 2\n* Upper right corner, coordinate axis 3 (optional)\n\nThe coordinate reference system of the values is WGS 84 longitude/latitude\n(http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate\nreference system is specified in the parameter `bbox-crs`.\n\nFor WGS 84 longitude/latitude the values are in most cases the sequence of\nminimum longitude, minimum latitude, maximum longitude and maximum latitude.\nHowever, in cases where the box spans the antimeridian the first value\n(west-most box edge) is larger than the third value (east-most box edge).\n\nIf a feature has multiple spatial geometry properties, it is the decision of the\nserver whether only a single spatial geometry property is used to determine\nthe extent or all relevant geometries.",
        "explode": false,
        "in": "query",
        "name": "bbox",
        "required": false,
        "schema": {
          "items": {
            "type": "number"
          },
          "maxItems": 6,
          "minItems": 4,
          "type": "array"
        },
        "style": "form"
      },
      "collectionId": {
        "description": "local identifier of a collection",
        "in": "path",
        "name": "collectionId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "datetime": {
        "description": "Either a date-time or an interval, open or closed. Date and time expressions\nadhere to RFC 3339. Open intervals are expressed using double-dots.\n\nExamples:\n\n* A date-time: \"2018-02-12T23:20:50Z\"\n* A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n* Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\nOnly features that have a temporal property that intersects the value of\n`datetime` are selected.\n\nIf a feature has multiple temporal properties, it is the decision of the\nserver whether only a single temporal property is used to determine\nthe extent or all relevant temporal properties.",
        "explode": false,
        "in": "query",
        "name": "datetime",
        "required": false,
        "schema": {
          "type": "string"
        },
        "style": "form"
      },
      "featureId": {
        "description": "local identifier of a feature",
        "in": "path",
        "name": "featureId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "description": "The optional limit parameter limits the number of items that are presented in the response document.\n\nOnly items are counted that are on the first level of the collection in the response document.\nNested objects contained within the explicitly requested items shall not be counted.\n\nMinimum = 1. Maximum = 10000. Default = 10.",
        "explode": false,
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "default": 10,
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        },
        "style": "form"
      }
    },
    "responses": {
      "Collection": {
        "content": {
          "application/json": {
            "example": {
              "description": "Buildings in the city of Bonn.",
              "extent": {
                "spatial": {
                  "bbox": [
                    [
                      7.01,
                      50.63,
                      7.22,
                      50.78
                    ]
                  ]
                },
                "temporal": {
                  "interval": [
                    [
                      "2010-02-15T12:34:56Z",
                      null
                    ]
                  ]
                }
              },
              "id": "buildings",
              "links": [
                {
                  "href": "http://data.example.org/collections/buildings/items",
                  "rel": "items",
                  "title": "Buildings",
                  "type": "application/geo+json"
                },
                {
                  "href": "http://data.example.org/collections/buildings/items.html",
                  "rel": "items",
                  "title": "Buildings",
                  "type": "text/html"
                },
                {
                  "href": "https://creativecommons.org/publicdomain/zero/1.0/",
                  "rel": "license",
                  "title": "CC0-1.0",
                  "type": "text/html"
                },
                {
                  "href": "https://creativecommons.org/publicdomain/zero/1.0/rdf",
                  "rel": "license",
                  "title": "CC0-1.0",
                  "type": "application/rdf+xml"
                }
              ],
              "title": "Buildings"
            },
            "schema": {
              "$ref": "#/components/schemas/collection"
            }
          },
          "text/html": {
            "schema": {
              "type": "string"
            }
          }
        },
        "description": "Information about the feature collection with id `collectionId`.\n\nThe response contains a linkto the items in the collection \n(path `/collections/{collectionId}/items`,link relation `items`) \nas well as key information about the collection. This information \nincludes:\n\n* A local identifier for the collection that is unique for the dataset;\n* A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);\n* An optional title and description for the collection;\n* An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;\n* An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature')."
      },
      "Collections": {
        "content": {
          "application/json": {
            "example": {
              "collections": [
                {
                  "description": "Buildings in the city of Bonn.",
                  "extent": {
                    "spatial": {
                      "bbox": [
                        [
                          7.01,
                          50.63,
                          7.22,
                          50.78
                        ]
                      ]
                    },
                    "temporal": {
                      "interval": [
                        [
                          "2010-02-15T12:34:56Z",
                          null
                        ]
                      ]
                    }
                  },
                  "id": "buildings",
                  "links": [
                    {
                      "href": "http://data.example.org/collections/buildings/items",
                      "rel": "items",
                      "title": "Buildings",
                      "type": "application/geo+json"
                    },
                    {
                      "href": "http://data.example.org/collections/buildings/items.html",
                      "rel": "items",
                      "title": "Buildings",
                      "type": "text/html"
                    },
                    {
                      "href": "https://creativecommons.org/publicdomain/zero/1.0/",
                      "rel": "license",
                      "title": "CC0-1.0",
                      "type": "text/html"
                    },
                    {
                      "href": "https://creativecommons.org/publicdomain/zero/1.0/rdf",
                      "rel": "license",
                      "title": "CC0-1.0",
                      "type": "application/rdf+xml"
                    }
                  ],
                  "title": "Buildings"
                }
              ],
              "links": [
                {
                  "href": "http://data.example.org/collections.json",
                  "rel": "self",
                  "title": "this document",
                  "type": "application/json"
                },
                {
                  "href": "http://data.example.org/collections.html",
                  "rel": "alternate",
                  "title": "this document as HTML",
                  "type": "text/html"
                },
                {
                  "href": "http://schemas.example.org/1.0/buildings.xsd",
                  "rel": "describedBy",
                  "title": "GML application schema for Acme Corporation building data",
                  "type": "application/xml"
                },
                {
                  "href": "http://download.example.org/buildings.gpkg",
                  "length": 472546,
                  "rel": "enclosure",
                  "title": "Bulk download (GeoPackage)",
                  "type": "application/geopackage+sqlite3"
                }
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/collections"
            }
          },
          "text/html": {
            "schema": {
              "type": "string"
            }
          }
        },
        "description": "The feature collections shared by this API.\n\nThe dataset is organized as one or more feature collections. This resource \nprovides information about and access to the collections. \n\nThe response contains the list of collections. For each collection, a link \nto the items in the collection (path `/collections/{collectionId}/items`, \nlink relation `items`) as well as key information about the collection. \nThis information includes:\n\n* A local identifier for the collection that is unique for the dataset;\n* A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);\n* An optional title and description for the collection;\n* An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;\n* An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature')."
      },
      "ConformanceDeclaration": {
        "content": {
          "application/json": {
            "example": {
              "conformsTo": [
                "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core",
                "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30",
                "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/html",
                "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"
              ]
            },
            "schema": {
              "$ref": "#/components/schemas/confClasses"
            }
          },
          "text/html": {
            "schema": {
              "type": "string"
            }
          }
        },
        "description": "The URIs of all conformance classes supported by the server.\n\nTo support \"generic\" clients that want to access multiple \nOGC API Features implementations - and not \"just\" a specific \nAPI / server, the server declares the conformance \nclasses it implements and conforms to."
      },
      "Feature": {
        "content": {
          "application/geo+json": {
            "example": {
              "geometry": {
                "coordinates": [
                  "..."
                ],
                "type": "Polygon"
              },
              "id": "123",
              "links": [
                {
                  "href": "http://data.example.com/id/building/123",
                  "rel": "canonical",
                  "title": "canonical URI of the building"
                },
                {
                  "href": "http://data.example.com/collections/buildings/items/123.json",
                  "rel": "self",
                  "title": "this document",
                  "type": "application/geo+json"
                },
                {
                  "href": "http://data.example.com/collections/buildings/items/123.html",
                  "rel": "alternate",
                  "title": "this document as HTML",
                  "type": "text/html"
                },
                {
                  "href": "http://data.example.com/collections/buildings",
                  "rel": "collection",
                  "title": "the collection document",
                  "type": "application/geo+json"
                }
              ],
              "properties": {
                "floors": "2",
                "function": "residential",
                "lastUpdate": "2015-08-01T12:34:56Z"
              },
              "type": "Feature"
            },
            "schema": {
              "$ref": "#/components/schemas/featureGeoJSON"
            }
          },
          "text/html": {
            "schema": {
              "type": "string"
            }
          }
        },
        "description": "fetch the feature with id `featureId` in the feature collection\nwith id `collectionId`"
      },
      "Features": {
        "content": {
          "application/geo+json": {
            "example": {
              "features": [
                {
                  "geometry": {
                    "coordinates": [
                      "..."
                    ],
                    "type": "Polygon"
                  },
                  "id": "123",
                  "properties": {
                    "floors": "2",
                    "function": "residential",
                    "lastUpdate": "2015-08-01T12:34:56Z"
                  },
                  "type": "Feature"
                },
                {
                  "geometry": {
                    "coordinates": [
                      "..."
                    ],
                    "type": "Polygon"
                  },
                  "id": "132",
                  "properties": {
                    "floors": "10",
                    "function": "public use",
                    "lastUpdate": "2013-12-03T10:15:37Z"
                  },
                  "type": "Feature"
                }
              ],
              "links": [
                {
                  "href": "http://data.example.com/collections/buildings/items.json",
                  "rel": "self",
                  "title": "this document",
                  "type": "application/geo+json"
                },
                {
                  "href": "http://data.example.com/collections/buildings/items.html",
                  "rel": "alternate",
                  "title": "this document as HTML",
                  "type": "text/html"
                },
                {
                  "href": "http://data.example.com/collections/buildings/items.json\u0026offset=10\u0026limit=2",
                  "rel": "next",
                  "title": "next page",
                  "type": "application/geo+json"
                }
              ],
              "numberMatched": 123,
              "numberReturned": 2,
              "timeStamp": "2018-04-03T14:52:23Z",
              "type": "FeatureCollection"
            },
            "schema": {
              "$ref": "#/components/schemas/featureCollectionGeoJSON"
            }
          },
          "text/html": {
            "schema": {
              "type": "string"
            }
          }
        },
        "description": "The response is a document consisting of features in the collection. \nThe features included in the response are determined by the server \nbased on the query parameters of the request. To support access to \nlarger collections without overloading the client, the API supports \npaged access with links to the next page, if more features are selected \nthat the page size.\n\nThe `bbox` and `datetime` parameter can be used to select only a \nsubset of the features in the collection (the features that are in the \nbounding box or time interval). The `bbox` parameter matches all features \nin the collection that are not associated with a location, too. The \n`datetime` parameter matches all features in the collection that are \nnot associated with a time stamp or interval, too.\n\nThe `limit` parameter may be used to control the subset of the \nselected features that should be returned in the response, the page size.\nEach page may include information about the number of selected and \nreturned features (`numberMatched` and `numberReturned`) as well as \nlinks to support paging (link relation `next`)."
      },
      "InvalidParameter": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/exception"
            }
          },
          "text/html": {
            "schema": {
              "type": "string"
            }
          }
        },
        "description": "A query parameter has an invalid value."
      },
      "LandingPage": {
        "content": {
          "application/json": {
            "example": {
              "description": "Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Features specification.",
              "links": [
                {
                  "href": "http://data.example.org/",
                  "rel": "self",
                  "title": "this document",
                  "type": "application/json"
                },
                {
                  "href": "http://data.example.org/api",
                  "rel": "service-desc",
                  "title": "the API definition",
                  "type": "application/vnd.oai.openapi+json;version=3.0"
                },
                {
                  "href": "http://data.example.org/api.html",
                  "rel": "service-doc",
                  "title": "the API documentation",
                  "type": "text/html"
                },
                {
                  "href": "http://data.example.org/conformance",
                  "rel": "conformance",
                  "title": "OGC API conformance classes implemented by this server",
                  "type": "application/json"
                },
                {
                  "href": "http://data.example.org/collections",
                  "rel": "data",
                  "title": "Information about the feature collections",
                  "type": "application/json"
                }
              ],
              "title": "Buildings in Bonn"
            },
            "schema": {
              "$ref": "#/components/schemas/landingPage"
            }
          },
          "text/html": {
            "schema": {
              "type": "string"
            }
          }
        },
        "description": "The landing page provides links to the API definition \n(link relations `service-desc` and `service-doc`), \nthe Conformance declaration (path `/conformance`, \nlink relation `conformance`), and the Feature \nCollections (path `/collections`, link relation \n`data`)."
      },
      "NotFound": {
        "description": "The requested URI was not found."
      },
      "ServerError": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/exception"
            }
          },
          "text/html": {
            "schema": {
              "type": "string"
            }
          }
        },
        "description": "A server error occurred."
      }
    },
    "schemas": {
      "collection": {
        "properties": {
          "crs": {
            "default": [
              "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
            ],
            "description": "the list of coordinate reference systems supported by the service",
            "example": [
              "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
              "http://www.opengis.net/def/crs/EPSG/0/4326"
            ],
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "description": "a description of the features in the collection",
            "example": "An address.",
            "type": "string"
          },
          "extent": {
            "$ref": "#/components/schemas/extent"
          },
          "id": {
            "description": "identifier of the collection used, for example, in URIs",
            "example": "address",
            "type": "string"
          },
          "itemType": {
            "default": "feature",
            "description": "indicator about the type of the items in the collection (the default value is 'feature').",
            "type": "string"
          },
          "links": {
            "example": [
              {
                "href": "http://data.example.com/buildings",
                "rel": "item"
              },
              {
                "href": "http://example.com/concepts/buildings.html",
                "rel": "describedBy",
                "type": "text/html"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "title": {
            "description": "human readable title of the collection",
            "example": "address",
            "type": "string"
          }
        },
        "required": [
          "id",
          "links"
        ],
        "type": "object"
      },
      "collections": {
        "properties": {
          "collections": {
            "items": {
              "$ref": "#/components/schemas/collection"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          }
        },
        "required": [
          "links",
          "collections"
        ],
        "type": "object"
      },
      "confClasses": {
        "properties": {
          "conformsTo": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "conformsTo"
        ],
        "type": "object"
      },
      "exception": {
        "description": "Information about the exception: an error code plus an optional description.",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "code"
        ],
        "type": "object"
      },
      "extent": {
        "description": "The extent of the features in the collection. In the Core only spatial and temporal\nextents are specified. Extensions may add additional members to represent other\nextents, for example, thermal or pressure ranges.",
        "properties": {
          "spatial": {
            "description": "The spatial extent of the features in the collection.",
            "properties": {
              "bbox": {
                "description": "One or more bounding boxes that describe the spatial extent of the dataset.\nIn the Core only a single bounding box is supported. Extensions may support\nadditional areas. If multiple areas are provided, the union of the bounding\nboxes describes the spatial extent.",
                "items": {
                  "description": "West, south, east, north edges of the bounding box. The coordinates\nare in the coordinate reference system specified in `crs`. By default\nthis is WGS 84 longitude/latitude.",
                  "example": [
                    -180,
                    -90,
                    180,
                    90
                  ],
                  "items": {
                    "type": "number"
                  },
                  "maxItems": 6,
                  "minItems": 4,
                  "type": "array"
                },
                "minItems": 1,
                "type": "array"
              },
              "crs": {
                "default": "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
                "description": "Coordinate reference system of the coordinates in the spatial extent\n(property `bbox`). The default reference system is WGS 84 longitude/latitude.\nIn the Core this is the only supported coordinate reference system.\nExtensions may support additional coordinate reference systems and add\nadditional enum values.",
                "enum": [
                  "http://www.opengis.net/def/crs/OGC/1.3/CRS84"
                ],
                "type": "string"
              }
            },
            "type": "object"
          },
          "temporal": {
            "description": "The temporal extent of the features in the collection.",
            "properties": {
              "interval": {
                "description": "One or more time intervals that describe the temporal extent of the dataset.\nThe value `null` is supported and indicates an open time intervall.\nIn the Core only a single time interval is supported. Extensions may support\nmultiple intervals. If multiple intervals are provided, the union of the\nintervals describes the temporal extent.",
                "items": {
                  "description": "Begin and end times of the time interval. The timestamps\nare in the coordinate reference system specified in `trs`. By default\nthis is the Gregorian calendar.",
                  "example": [
                    "2011-11-11T12:22:11Z",
                    null
                  ],
                  "items": {
                    "format": "date-time",
                    "nullable": true,
                    "type": "string"
                  },
                  "maxItems": 2,
                  "minItems": 2,
                  "type": "array"
                },
                "minItems": 1,
                "type": "array"
              },
              "trs": {
                "default": "http://www.opengis.net/def/uom/ISO-8601/0/Gregorian",
                "description": "Coordinate reference system of the coordinates in the temporal extent\n(property `interval`). The default reference system is the Gregorian calendar.\nIn the Core this is the only supported temporal reference system.\nExtensions may support additional temporal reference systems and add\nadditional enum values.",
                "enum": [
                  "http://www.opengis.net/def/uom/ISO-8601/0/Gregorian"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "featureCollectionGeoJSON": {
        "properties": {
          "features": {
            "items": {
              "$ref": "#/components/schemas/featureGeoJSON"
            },
            "type": "array"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "numberMatched": {
            "$ref": "#/components/schemas/numberMatched"
          },
          "numberReturned": {
            "$ref": "#/components/schemas/numberReturned"
          },
          "timeStamp": {
            "$ref": "#/components/schemas/timeStamp"
          },
          "type": {
            "enum": [
              "FeatureCollection"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "features"
        ],
        "type": "object"
      },
      "featureGeoJSON": {
        "properties": {
          "geometry": {
            "$ref": "#/components/schemas/geometryGeoJSON"
          },
          "id": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "properties": {
            "nullable": true,
            "type": "object"
          },
          "type": {
            "enum": [
              "Feature"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "geometry",
          "properties"
        ],
        "type": "object"
      },
      "geometryGeoJSON": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/pointGeoJSON"
          },
          {
            "$ref": "#/components/schemas/multipointGeoJSON"
          },
          {
            "$ref": "#/components/schemas/linestringGeoJSON"
          },
          {
            "$ref": "#/components/schemas/multilinestringGeoJSON"
          },
          {
            "$ref": "#/components/schemas/polygonGeoJSON"
          },
          {
            "$ref": "#/components/schemas/multipolygonGeoJSON"
          },
          {
            "$ref": "#/components/schemas/geometrycollectionGeoJSON"
          }
        ]
      },
      "geometrycollectionGeoJSON": {
        "properties": {
          "geometries": {
            "items": {
              "$ref": "#/components/schemas/geometryGeoJSON"
            },
            "type": "array"
          },
          "type": {
            "enum": [
              "GeometryCollection"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "geometries"
        ],
        "type": "object"
      },
      "landingPage": {
        "properties": {
          "description": {
            "example": "Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Features specification.",
            "type": "string"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/link"
            },
            "type": "array"
          },
          "title": {
            "example": "Buildings in Bonn",
            "type": "string"
          }
        },
        "required": [
          "links"
        ],
        "type": "object"
      },
      "linestringGeoJSON": {
        "properties": {
          "coordinates": {
            "items": {
              "items": {
                "type": "number"
              },
              "minItems": 2,
              "type": "array"
            },
            "minItems": 2,
            "type": "array"
          },
          "type": {
            "enum": [
              "LineString"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object"
      },
      "link": {
        "properties": {
          "href": {
            "example": "http://data.example.com/buildings/123",
            "type": "string"
          },
          "hreflang": {
            "example": "en",
            "type": "string"
          },
          "length": {
            "type": "integer"
          },
          "rel": {
            "example": "alternate",
            "type": "string"
          },
          "title": {
            "example": "Trierer Strasse 70, 53115 Bonn",
            "type": "string"
          },
          "type": {
            "example": "application/geo+json",
            "type": "string"
          }
        },
        "required": [
          "href"
        ],
        "type": "object"
      },
      "multilinestringGeoJSON": {
        "properties": {
          "coordinates": {
            "items": {
              "items": {
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "type": "array"
              },
              "minItems": 2,
              "type": "array"
            },
            "type": "array"
          },
          "type": {
            "enum": [
              "MultiLineString"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object"
      },
      "multipointGeoJSON": {
        "properties": {
          "coordinates": {
            "items": {
              "items": {
                "type": "number"
              },
              "minItems": 2,
              "type": "array"
            },
            "type": "array"
          },
          "type": {
            "enum": [
              "MultiPoint"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object"
      },
      "multipolygonGeoJSON": {
        "properties": {
          "coordinates": {
            "items": {
              "items": {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "minItems": 2,
                  "type": "array"
                },
                "minItems": 4,
                "type": "array"
              },
              "type": "array"
            },
            "type": "array"
          },
          "type": {
            "enum": [
              "MultiPolygon"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object"
      },
      "numberMatched": {
        "description": "The number of features of the feature type that match the selection\nparameters like `bbox`.",
        "example": 127,
        "minimum": 0,
        "type": "integer"
      },
      "numberReturned": {
        "description": "The number of features in the feature collection.\n\nA server may omit this information in a response, if the information\nabout the number of features is not known or difficult to compute.\n\nIf the value is provided, the value shall be identical to the number\nof items in the \"features\" array.",
        "example": 10,
        "minimum": 0,
        "type": "integer"
      },
      "pointGeoJSON": {
        "properties": {
          "coordinates": {
            "items": {
              "type": "number"
            },
            "minItems": 2,
            "type": "array"
          },
          "type": {
            "enum": [
              "Point"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object"
      },
      "polygonGeoJSON": {
        "properties": {
          "coordinates": {
            "items": {
              "items": {
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "type": "array"
              },
              "minItems": 4,
              "type": "array"
            },
            "type": "array"
          },
          "type": {
            "enum": [
              "Polygon"
            ],
            "type": "string"
          }
        },
        "required": [
          "type",
          "coordinates"
        ],
        "type": "object"
      },
      "timeStamp": {
        "description": "This property indicates the time and date when the response was generated.",
        "example": "2017-08-17T08:05:32Z",
        "format": "date-time",
        "type": "string"
      }
    }
  },
  "info": {
    "contact": {
      "email": "info@example.org",
      "name": "Acme Corporation",
      "url": "http://example.org/"
    },
    "description": "This is a sample OpenAPI definition that conforms to the conformance \nclasses \"Core\", \"GeoJSON\", \"HTML\" and \"OpenAPI 3.0\" of the draft\nstandard \"OGC API - Features - Part 1: Core\".\n\nThis example is a generic OGC API Features definition that uses path \nparameters to describe all feature collections and all features. \nThe generic OpenAPI definition does not provide any details on the \ncollections or the feature content. This information is only available \nfrom accessing the feature collection resources.\n\nThere is [another example](ogcapi-features-1-example2.yaml) \nthat specifies each collection explicitly.",
    "license": {
      "name": "CC-BY 4.0 license",
      "url": "https://creativecommons.org/licenses/by/4.0/"
    },
    "title": "A sample API conforming to the draft standard OGC API - Features - Part 1: Core",
    "version": "1.0.0-draft.2"
  },
  "openapi": "3.0.1",
  "paths": {
    "/": {
      "get": {
        "description": "The landing page provides links to the API definition, the conformance\nstatements and to the feature collections in this dataset.",
        "operationId": "getLandingPage",
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/LandingPage"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
          }
        },
        "summary": "landing page",
        "tags": [
          "Capabilities"
        ]
      }
    },
    "/collections": {
      "get": {
        "operationId": "getCollections",
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Collections"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
          }
        },
        "summary": "the feature collections in the dataset",
        "tags": [
          "Capabilities"
        ]
      }
    },
    "/collections/{collectionId}": {
      "get": {
        "operationId": "describeCollection",
        "parameters": [
          {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/collectionId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Collection"
          },
          "404": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
          }
        },
        "summary": "describe the feature collection with id `collectionId`",
        "tags": [
          "Capabilities"
        ]
      }
    },
    "/collections/{collectionId}/items": {
      "get": {
        "description": "Fetch features of the feature collection with id `collectionId`.\n\nEvery feature in a dataset belongs to a collection. A dataset may\nconsist of multiple feature collections. A feature collection is often a\ncollection of features of a similar type, based on a common schema.\n\nUse content negotiation to request HTML or GeoJSON.",
        "operationId": "getFeatures",
        "parameters": [
          {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/collectionId"
          },
          {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/limit"
          },
          {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/bbox"
          },
          {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/datetime"
          }
        ],
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Features"
          },
          "400": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/InvalidParameter"
          },
          "404": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
          }
        },
        "summary": "fetch features",
        "tags": [
          "Data"
        ]
      }
    },
    "/collections/{collectionId}/items/{featureId}": {
      "get": {
        "description": "Fetch the feature with id `featureId` in the feature collection\nwith id `collectionId`.\n\nUse content negotiation to request HTML or GeoJSON.",
        "operationId": "getFeature",
        "parameters": [
          {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/collectionId"
          },
          {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/parameters/featureId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/Feature"
          },
          "404": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/NotFound"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
          }
        },
        "summary": "fetch a single feature",
        "tags": [
          "Data"
        ]
      }
    },
    "/conformance": {
      "get": {
        "description": "A list of all conformance classes specified in a standard that the \nserver conforms to.",
        "operationId": "getConformanceDeclaration",
        "responses": {
          "200": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ConformanceDeclaration"
          },
          "500": {
            "$ref": "https://raw.githubusercontent.com/opengeospatial/WFS_FES/master/core/openapi/ogcapi-features-1.yaml#/components/responses/ServerError"
          }
        },
        "summary": "information about specifications that this API conforms to",
        "tags": [
          "Capabilities"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://data.example.org/",
      "description": "Production server"
    },
    {
      "url": "https://dev.example.org/",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "description": "essential characteristics of this API",
      "name": "Capabilities"
    },
    {
      "description": "access to data (features)",
      "name": "Data"
    }
  ]
}